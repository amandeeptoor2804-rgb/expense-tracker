rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    /* ---------------- Helpers ---------------- */
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    function isoDate(d) {
      // YYYY-MM-DD
      return d is string && d.matches('^\\d{4}-\\d{2}-\\d{2}$');
    }

    function validCurrency(c) {
      return c in ['CAD', 'USD'];
    }

    function validSource(s) {
      return s in ['PHC', 'UBC'];
    }

    function validMethod(m) {
      return m in ['card', 'cash', 'other'];
    }

    /* Optional: hard-lock to your email only (uncomment + set your email if you want)
    function allowedEmail() {
      return isSignedIn() && request.auth.token.email == 'YOUR_EMAIL@EXAMPLE.COM';
    }
    */

    /* ---------- incomes collection ---------- */
    match /incomes/{docId} {
      allow read, update, delete: if isOwner(resource.data.ownerUid);

      allow create: if isOwner(request.resource.data.ownerUid)
        && request.resource.data.keys().hasOnly([
          'ownerUid', 'date', 'amount', 'currency', 'source',
          'method', 'notes', 'timestamp'
        ])
        && isoDate(request.resource.data.date)
        && request.resource.data.amount is number
        && request.resource.data.amount >= 0
        && validCurrency(request.resource.data.currency)
        && validSource(request.resource.data.source)
        && validMethod(request.resource.data.method)
        && request.resource.data.timestamp is timestamp;

      // Prevent changing ownerUid on update
      allow update: if isOwner(resource.data.ownerUid)
        && request.resource.data.ownerUid == resource.data.ownerUid;
    }

    /* ---------- expenses collection ---------- */
    match /expenses/{docId} {
      allow read, update, delete: if isOwner(resource.data.ownerUid);

      allow create: if isOwner(request.resource.data.ownerUid)
        && request.resource.data.keys().hasOnly([
          'ownerUid', 'date', 'amount', 'currency', 'source',
          'category', 'method', 'notes', 'timestamp'
        ])
        && isoDate(request.resource.data.date)
        && request.resource.data.amount is number
        && request.resource.data.amount >= 0
        && validCurrency(request.resource.data.currency)
        && validSource(request.resource.data.source)
        && (request.resource.data.category is string && request.resource.data.category.size() > 0)
        && validMethod(request.resource.data.method)
        && request.resource.data.timestamp is timestamp;

      // Prevent changing ownerUid on update
      allow update: if isOwner(resource.data.ownerUid)
        && request.resource.data.ownerUid == resource.data.ownerUid;
    }

    /* Deny everything else by default */
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
